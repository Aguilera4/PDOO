/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUIQytetet;
import modeloqytetet.*;
import java.util.ArrayList;
import javax.swing.JOptionPane;
/**
 *
 * @author usuario
 */
public class ControladorQytetet extends javax.swing.JFrame {

     static Qytetet modeloQytetet;
    /**
     * Creates new form ControladorQytetet
     */
    public ControladorQytetet() {
        initComponents();
    }
        public void actualizar(Qytetet unQytetet){
        modeloQytetet = unQytetet;
        this.vistaQytetet1.actualizar(modeloQytetet);
        this.habilitarComenzarTurno();
        this.repaint();
        this.revalidate();
    }
        
        
        public void habilitarComenzarTurno(){
            
            this.ComprarPropiedad.setEnabled(false);
            this.SiguienteJugador.setEnabled(false);
            this.AplicarSorpresa.setEnabled(false);

            if ( modeloQytetet.getJugadorActual().getEncarcelado()){
                this.SalirCarcelPagando.setEnabled(true);
                this.SalirCarcelDado.setEnabled(true);
            }
            else{
                this.EdificarCasa.setEnabled(false);
                this.EdificarHotel.setEnabled(false);
                this.SalirCarcelPagando.setEnabled(false);
                this.SalirCarcelDado.setEnabled(false);
                this.Jugar.setEnabled(true);
            }   

            
        }
        
         
/*private void jbSalirCarcelPagandoActionPerformed
     (java.awt.event.ActionEvent evt) {
  boolean resultado =
  modeloQytetet.intentarSalirCarcel(MetodoSalirCarcel.PAGANDOLIBERTAD);
  this.SalirCarcelPagnado.setEnabled(false);
  this.SalirCarcelDado.setEnabled(false);
  if(resultado){
     JOptionPane.showMessageDialog(this, "Sales de la c√°rcel");
     this.Jugar.setEnabled(true);
  }else {
     JOptionPane.showMessageDialog(this, "NO sales de la carcel");
     this.SiguienteJugador.setEnabled(true);
   }
  this.vistaQytetet1.actualizar(modeloQytetet);
}*/
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        SalirCarcelDado = new javax.swing.JButton();
        Jugar = new javax.swing.JButton();
        SalirCarcelPagando = new javax.swing.JButton();
        ComprarPropiedad = new javax.swing.JButton();
        AplicarSorpresa = new javax.swing.JButton();
        SiguienteJugador = new javax.swing.JButton();
        EdificarHotel = new javax.swing.JButton();
        EdificarCasa = new javax.swing.JButton();
        vistaQytetet1 = new GUIQytetet.VistaQytetet();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        SalirCarcelDado.setText("Salir Carcel Dado");
        SalirCarcelDado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SalirCarcelDadoActionPerformed(evt);
            }
        });

        Jugar.setText("Jugar");
        Jugar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JugarActionPerformed(evt);
            }
        });

        SalirCarcelPagando.setText("Salir Carcel Pagando");
        SalirCarcelPagando.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SalirCarcelPagandoActionPerformed(evt);
            }
        });

        ComprarPropiedad.setText("Comprar Propiedad");
        ComprarPropiedad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ComprarPropiedadActionPerformed(evt);
            }
        });

        AplicarSorpresa.setText("Aplicar Sorpresa");
        AplicarSorpresa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AplicarSorpresaActionPerformed(evt);
            }
        });

        SiguienteJugador.setText("Siguiente Jugador");
        SiguienteJugador.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SiguienteJugadorActionPerformed(evt);
            }
        });

        EdificarHotel.setText("Edificar Hotel");
        EdificarHotel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EdificarHotelActionPerformed(evt);
            }
        });

        EdificarCasa.setText("Edificar Casa");
        EdificarCasa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EdificarCasaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(SalirCarcelPagando, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(SalirCarcelDado, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(Jugar, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(AplicarSorpresa, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(ComprarPropiedad, javax.swing.GroupLayout.DEFAULT_SIZE, 170, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(EdificarCasa, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(EdificarHotel, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(SiguienteJugador)
                .addContainerGap(1489, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addComponent(vistaQytetet1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 805, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(vistaQytetet1, javax.swing.GroupLayout.PREFERRED_SIZE, 574, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Jugar, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(SiguienteJugador))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(SalirCarcelDado)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(SalirCarcelPagando)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(ComprarPropiedad)
                            .addComponent(EdificarHotel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(AplicarSorpresa)
                            .addComponent(EdificarCasa))))
                .addContainerGap(190, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void SalirCarcelPagandoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SalirCarcelPagandoActionPerformed
        // TODO add your handling code here:
        boolean resultado = modeloQytetet.intentarSalirCarcel(MetodoSalirCarcel.PAGANDOLIBERTAD);
        this.SalirCarcelPagando.setEnabled(false);
        this.SalirCarcelDado.setEnabled(false);
        if(resultado){
            JOptionPane.showMessageDialog(this, "Sales de la c√°rcel");
            this.Jugar.setEnabled(true);
        }else {
            JOptionPane.showMessageDialog(this, "NO sales de la carcel");
            this.SiguienteJugador.setEnabled(true);
        }
       this.vistaQytetet1.actualizar(modeloQytetet);
    }//GEN-LAST:event_SalirCarcelPagandoActionPerformed

    private void SalirCarcelDadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SalirCarcelDadoActionPerformed
        // TODO add your handling code here:
        boolean resultado = modeloQytetet.intentarSalirCarcel(MetodoSalirCarcel.TIRANDODADO);
        this.SalirCarcelPagando.setEnabled(false);
        this.SalirCarcelDado.setEnabled(false);
        this.AplicarSorpresa.setEnabled(false);
        if(resultado){
            JOptionPane.showMessageDialog(this, "Sales de la c√°rcel");
            this.Jugar.setEnabled(true);
        }else{
            JOptionPane.showMessageDialog(this, "NO sales de la carcel");
            this.SiguienteJugador.setEnabled(true);
        }
        this.vistaQytetet1.actualizar(modeloQytetet);
    }//GEN-LAST:event_SalirCarcelDadoActionPerformed

    private void JugarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JugarActionPerformed
        // TODO add your handling code here:
        boolean tienePropietario = modeloQytetet.Jugar();
        //Si no est√° encarcelado
        
        
        if(!modeloQytetet.getJugadorActual().getEncarcelado()){
            this.SalirCarcelPagando.setEnabled(false);
            this.SalirCarcelDado.setEnabled(false);
            this.AplicarSorpresa.setEnabled(false);
            this.ComprarPropiedad.setEnabled(false);
            if(modeloQytetet.getCartaActual()!=null){
                this.AplicarSorpresa.setEnabled(true);
                this.ComprarPropiedad.setEnabled(false); 
                this.SiguienteJugador.setEnabled(false);
            }
            else{
                this.SiguienteJugador.setEnabled(true);
                if(modeloQytetet.getJugadorActual().getCasillaActual().soyEdificable()){
                    if (!tienePropietario){
                        if(modeloQytetet.getJugadorActual().tengoSaldo(modeloQytetet.getJugadorActual().getCasillaActual().coste))
                        this.ComprarPropiedad.setEnabled(true);
                    }
                }
            }
        }
        else{
            this.SiguienteJugador.setEnabled(true);
        }
        
        this.Jugar.setEnabled(false);
        
        this.vistaQytetet1.actualizar(modeloQytetet);
    }//GEN-LAST:event_JugarActionPerformed

    private void ComprarPropiedadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ComprarPropiedadActionPerformed
        // TODO add your handling code here:
        modeloQytetet.comprarTituloPropiedad();
        this.ComprarPropiedad.setEnabled(false);
        this.SalirCarcelPagando.setEnabled(false);
        this.SalirCarcelDado.setEnabled(false);
        this.AplicarSorpresa.setEnabled(false);
        this.EdificarCasa.setEnabled(true);
        this.EdificarHotel.setEnabled(true);
        
        this.vistaQytetet1.actualizar(modeloQytetet);
    }//GEN-LAST:event_ComprarPropiedadActionPerformed

    private void SiguienteJugadorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SiguienteJugadorActionPerformed
        // TODO add your handling code here:
        if(!modeloQytetet.getJugadorActual().tengoSaldo(0)){
            ArrayList<Jugador> puestos = new ArrayList();
            puestos = modeloQytetet.obtenerRanking();
            String aux="";
            int i=1;
            aux+="RANKING";
            for ( Jugador jug : puestos){
                aux+="\n Puesto:  "+i+". "+jug.getNombre();
                i++;
            }             
             
            JOptionPane.showMessageDialog(this, aux );
            return;
        }
        modeloQytetet.siguienteJugador();
        this.Jugar.setEnabled(true);
        this.SiguienteJugador.setEnabled(false);
        this.ComprarPropiedad.setEnabled(false);
        this.EdificarCasa.setEnabled(false);
        this.EdificarHotel.setEnabled(false);
        
        if(modeloQytetet.getJugadorActual().getEncarcelado()){
            this.SalirCarcelDado.setEnabled(true);
            this.SalirCarcelPagando.setEnabled(true);
            this.Jugar.setEnabled(false);
        }
        
        this.vistaQytetet1.actualizar(modeloQytetet);
    }//GEN-LAST:event_SiguienteJugadorActionPerformed

    private void AplicarSorpresaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AplicarSorpresaActionPerformed
        // TODO add your handling code here:
        modeloQytetet.aplicarSorpresa();
        
        this.AplicarSorpresa.setEnabled(false);
        this.Jugar.setEnabled(false);
        this.SiguienteJugador.setEnabled(true);
        this.vistaQytetet1.actualizar(modeloQytetet);
    }//GEN-LAST:event_AplicarSorpresaActionPerformed

    private void EdificarHotelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EdificarHotelActionPerformed
        // TODO add your handling code here:
        if (!modeloQytetet.edificarHotel(modeloQytetet.getJugadorActual().getCasillaActual())){
            this.EdificarHotel.setEnabled(false);
        }
        else{
            this.EdificarCasa.setEnabled(true);
        }
         
         this.vistaQytetet1.actualizar(modeloQytetet);
    }//GEN-LAST:event_EdificarHotelActionPerformed

    private void EdificarCasaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EdificarCasaActionPerformed
        // TODO add your handling code here:
       if (!modeloQytetet.edificarCasa(modeloQytetet.getJugadorActual().getCasillaActual())){
           this.EdificarCasa.setEnabled(false);
       }
       this.EdificarHotel.setEnabled(true);
        this.vistaQytetet1.actualizar(modeloQytetet);
    }//GEN-LAST:event_EdificarCasaActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
  Qytetet juego = Qytetet.getInstance();
        
       ControladorQytetet controladorQytetet = new ControladorQytetet();
       
       CapturaNombreJugadores capturaNombres = new CapturaNombreJugadores(controladorQytetet, true);
       ArrayList <String> nombres = capturaNombres.obtenerNombres();
       
       Dado.createInstance(controladorQytetet);
      
       
       juego.inicializarJuego(nombres);
       
       controladorQytetet.actualizar(juego);
       
       controladorQytetet.setVisible(true);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AplicarSorpresa;
    private javax.swing.JButton ComprarPropiedad;
    private javax.swing.JButton EdificarCasa;
    private javax.swing.JButton EdificarHotel;
    private javax.swing.JButton Jugar;
    private javax.swing.JButton SalirCarcelDado;
    private javax.swing.JButton SalirCarcelPagando;
    private javax.swing.JButton SiguienteJugador;
    private GUIQytetet.VistaQytetet vistaQytetet1;
    // End of variables declaration//GEN-END:variables
}
